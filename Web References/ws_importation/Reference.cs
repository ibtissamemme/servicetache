//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace sfwServiceTache.ws_importation {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsimportSoap", Namespace="http://tempuri.org/")]
    public partial class wsimport : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback updateXmlSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback setFilePathInXlmOperationCompleted;
        
        private System.Threading.SendOrPostCallback returnFieldInXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback TacheImportTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback TacheImportOperationCompleted;
        
        private System.Threading.SendOrPostCallback EcritureFichierTxtDistantOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsimport() {
            this.Url = global::sfwServiceTache.Properties.Settings.Default.liste_wsimport;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event updateXmlSettingCompletedEventHandler updateXmlSettingCompleted;
        
        /// <remarks/>
        public event setFilePathInXlmCompletedEventHandler setFilePathInXlmCompleted;
        
        /// <remarks/>
        public event returnFieldInXmlCompletedEventHandler returnFieldInXmlCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event TacheImportTestCompletedEventHandler TacheImportTestCompleted;
        
        /// <remarks/>
        public event TacheImportCompletedEventHandler TacheImportCompleted;
        
        /// <remarks/>
        public event EcritureFichierTxtDistantCompletedEventHandler EcritureFichierTxtDistantCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateXmlSetting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string updateXmlSetting() {
            object[] results = this.Invoke("updateXmlSetting", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateXmlSettingAsync() {
            this.updateXmlSettingAsync(null);
        }
        
        /// <remarks/>
        public void updateXmlSettingAsync(object userState) {
            if ((this.updateXmlSettingOperationCompleted == null)) {
                this.updateXmlSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateXmlSettingOperationCompleted);
            }
            this.InvokeAsync("updateXmlSetting", new object[0], this.updateXmlSettingOperationCompleted, userState);
        }
        
        private void OnupdateXmlSettingOperationCompleted(object arg) {
            if ((this.updateXmlSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateXmlSettingCompleted(this, new updateXmlSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setFilePathInXlm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setFilePathInXlm(string cfg_fichierid, string pathToFile) {
            object[] results = this.Invoke("setFilePathInXlm", new object[] {
                        cfg_fichierid,
                        pathToFile});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setFilePathInXlmAsync(string cfg_fichierid, string pathToFile) {
            this.setFilePathInXlmAsync(cfg_fichierid, pathToFile, null);
        }
        
        /// <remarks/>
        public void setFilePathInXlmAsync(string cfg_fichierid, string pathToFile, object userState) {
            if ((this.setFilePathInXlmOperationCompleted == null)) {
                this.setFilePathInXlmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFilePathInXlmOperationCompleted);
            }
            this.InvokeAsync("setFilePathInXlm", new object[] {
                        cfg_fichierid,
                        pathToFile}, this.setFilePathInXlmOperationCompleted, userState);
        }
        
        private void OnsetFilePathInXlmOperationCompleted(object arg) {
            if ((this.setFilePathInXlmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setFilePathInXlmCompleted(this, new setFilePathInXlmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/returnFieldInXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string returnFieldInXml(string cfg_fichierid) {
            object[] results = this.Invoke("returnFieldInXml", new object[] {
                        cfg_fichierid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void returnFieldInXmlAsync(string cfg_fichierid) {
            this.returnFieldInXmlAsync(cfg_fichierid, null);
        }
        
        /// <remarks/>
        public void returnFieldInXmlAsync(string cfg_fichierid, object userState) {
            if ((this.returnFieldInXmlOperationCompleted == null)) {
                this.returnFieldInXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreturnFieldInXmlOperationCompleted);
            }
            this.InvokeAsync("returnFieldInXml", new object[] {
                        cfg_fichierid}, this.returnFieldInXmlOperationCompleted, userState);
        }
        
        private void OnreturnFieldInXmlOperationCompleted(object arg) {
            if ((this.returnFieldInXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.returnFieldInXmlCompleted(this, new returnFieldInXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TacheImportTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TacheImportTest(string tacheid) {
            object[] results = this.Invoke("TacheImportTest", new object[] {
                        tacheid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TacheImportTestAsync(string tacheid) {
            this.TacheImportTestAsync(tacheid, null);
        }
        
        /// <remarks/>
        public void TacheImportTestAsync(string tacheid, object userState) {
            if ((this.TacheImportTestOperationCompleted == null)) {
                this.TacheImportTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTacheImportTestOperationCompleted);
            }
            this.InvokeAsync("TacheImportTest", new object[] {
                        tacheid}, this.TacheImportTestOperationCompleted, userState);
        }
        
        private void OnTacheImportTestOperationCompleted(object arg) {
            if ((this.TacheImportTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TacheImportTestCompleted(this, new TacheImportTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TacheImport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TacheImport(string tacheid) {
            object[] results = this.Invoke("TacheImport", new object[] {
                        tacheid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TacheImportAsync(string tacheid) {
            this.TacheImportAsync(tacheid, null);
        }
        
        /// <remarks/>
        public void TacheImportAsync(string tacheid, object userState) {
            if ((this.TacheImportOperationCompleted == null)) {
                this.TacheImportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTacheImportOperationCompleted);
            }
            this.InvokeAsync("TacheImport", new object[] {
                        tacheid}, this.TacheImportOperationCompleted, userState);
        }
        
        private void OnTacheImportOperationCompleted(object arg) {
            if ((this.TacheImportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TacheImportCompleted(this, new TacheImportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EcritureFichierTxtDistant", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EcritureFichierTxtDistant(string sourceText, string cfgfichierid) {
            object[] results = this.Invoke("EcritureFichierTxtDistant", new object[] {
                        sourceText,
                        cfgfichierid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EcritureFichierTxtDistantAsync(string sourceText, string cfgfichierid) {
            this.EcritureFichierTxtDistantAsync(sourceText, cfgfichierid, null);
        }
        
        /// <remarks/>
        public void EcritureFichierTxtDistantAsync(string sourceText, string cfgfichierid, object userState) {
            if ((this.EcritureFichierTxtDistantOperationCompleted == null)) {
                this.EcritureFichierTxtDistantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEcritureFichierTxtDistantOperationCompleted);
            }
            this.InvokeAsync("EcritureFichierTxtDistant", new object[] {
                        sourceText,
                        cfgfichierid}, this.EcritureFichierTxtDistantOperationCompleted, userState);
        }
        
        private void OnEcritureFichierTxtDistantOperationCompleted(object arg) {
            if ((this.EcritureFichierTxtDistantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EcritureFichierTxtDistantCompleted(this, new EcritureFichierTxtDistantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void updateXmlSettingCompletedEventHandler(object sender, updateXmlSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateXmlSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateXmlSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void setFilePathInXlmCompletedEventHandler(object sender, setFilePathInXlmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setFilePathInXlmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setFilePathInXlmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void returnFieldInXmlCompletedEventHandler(object sender, returnFieldInXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class returnFieldInXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal returnFieldInXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void TacheImportTestCompletedEventHandler(object sender, TacheImportTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TacheImportTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TacheImportTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void TacheImportCompletedEventHandler(object sender, TacheImportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TacheImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TacheImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void EcritureFichierTxtDistantCompletedEventHandler(object sender, EcritureFichierTxtDistantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EcritureFichierTxtDistantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EcritureFichierTxtDistantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591